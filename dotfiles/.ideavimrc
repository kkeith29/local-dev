set scrolloff=8
set sidescrolloff=8
set incsearch
set showmode
set idearefactormode=keep
set relativenumber
set number
set surround
set commentary
set visualbell
set noerrorbells
set iskeyword+=$

" NERDTree settings
set NERDTree
let g:NERDTreeMapActivateNode='l'
let g:NERDTreeMapJumpParent='h'

""" key mappings
let mapleader = ' '

" easy control over ideavimrc file
nnoremap \e :e ~/.ideavimrc<CR>
nnoremap \r :action IdeaVim.ReloadVimRc.reload<CR>

" global bindings
map Q gq
nnoremap U <C-r>
nnoremap H ^
vnoremap H ^
nnoremap L $
vnoremap L $

" update deletes to not change buffer
nnoremap d "_d
vnoremap d "_d

" update cut in normal mode to not change buffer
nnoremap x "_x

" make Y behave like other capitals
nnoremap Y y$

" highlight selection again after ident
vnoremap < <gv
vnoremap > >gv

" maintain cursor position when yanking a visual selection
vnoremap y myy`y
vnoremap Y myY`y

" keep it centered
nnoremap n nzz
nnoremap N Nzz
nnoremap J mzJ`z

" system clipboard
vmap <leader>y "+y
vmap <leader>d "+d
nmap <leader>y "+yy
nmap <leader>p "+p
nmap <leader>P "+P
vmap <leader>p "+p
vmap <leader>P "+P

""" tool navigation (prefix w = window)
nnoremap <leader>wp :action ActivateProjectToolWindow<CR>
nnoremap <leader>wt :action ActivateTerminalToolWindow<CR>
nnoremap <leader>wd :action ActivateDebugToolWindow<CR>
nnoremap <leader>wn :action ActivateNotificationsToolWindow<CR>
nnoremap <leader>wf :action ActivateFindToolWindow<CR>
nnoremap <leader>wr :action ActivateRunToolWindow<CR>
nnoremap <leader>wq :action HideAllWindows<CR>

""" tab management
nnoremap <leader>q :action CloseAllEditors<CR>

" tab navigation (prefix t = tab)
nnoremap <TAB> :action NextTab<CR>
nnoremap <s-TAB> :action PreviousTab<CR>

" tab movements
nnoremap <leader>th :action MoveTabLeft<CR>
nnoremap <leader>tj :action MoveTabDown<CR>
nnoremap <leader>tk :action MoveTabUp<CR>
nnoremap <leader>tl :action MoveTabRight<CR>
nnoremap <leader>tm :action MoveEditorToOppositeTabGroup<CR>

" tab closing
nnoremap <leader>tq :action CloseContent<CR>
nnoremap <leader>tQ :action CloseAllEditorsButActive<CR>

" tab pane splitting
nnoremap <c-\> :action SplitVertically<CR>
nnoremap <c--> :action SplitHorizontally<CR>
nnoremap <c-=> :action Unsplit<CR>

" tab pane movements
sethandler <c-j> a:vim
sethandler <c-k> a:vim
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k

""" file navigation and management (prefix f = file)
nnoremap <leader>ff :NERDTreeFind<CR>
nnoremap <leader>fr :action RenameFile<CR>
nnoremap <leader>fs :action FileStructurePopup<CR>

""" editor actions (prefix e = editor)
nnoremap <leader>ea :action ShowIntentionActions<CR>
nnoremap <leader>ew :write<CR>
nnoremap <leader>ef :action ToggleFullScreen<CR>
nnoremap <leader>ep :action TogglePresentationMode<CR>

""" code navigation (prefix g = go)
nnoremap [[ :action MethodUp<CR>
nnoremap ]] :action MethodDown<CR>
nnoremap go :action GotoFile<CR>
nnoremap gu :action FindUsages<CR>
nnoremap gd :action GotoDeclaration<CR>
nnoremap gi :action GotoImplementation<CR>
nnoremap gp :action GotoSuperMethod<CR>
nnoremap ge :action GotoNextError<CR>
nnoremap gE :action GotoPreviousError<CR>
nnoremap gt :action GotoTest<CR>
nnoremap gb :action Back<CR>
nnoremap gf :action Forward<CR>
nnoremap gs :action Switcher<CR>

""" code editing/refactoring (prefix c = code)
nnoremap <leader>cc :action CommentByLineComment<CR>
vnoremap <leader>cc :action CommentByLineComment<CR>
nnoremap <leader>cm :action Move<CR>
nnoremap <leader>cr :action RenameElement<CR>
vnoremap <leader>cu :!ld-cli code:use-formatter<CR>

""" code running and debugging (prefix r = run)
nnoremap <leader>rc :action ContextRun<CR>
nnoremap <leader>rr :action Rerun<CR>
nnoremap <leader>rf :action RerunFailedTests<CR>
nnoremap <leader>rd :action ContextDebug<CR>
nnoremap <leader>rm :action ChooseRunConfiguration<CR>

""" code debugging (prefix d = debug)
nnoremap <leader>db :action ToggleLineBreakpoint<CR>
nnoremap <leader>dr :action Resume<CR>
nnoremap <leader>dm :action XDebugger.MuteBreakpoints<CR>
nnoremap <leader>so :action StepOver<CR>
nnoremap <leader>si :action StepInto<CR>
nnoremap <leader>sI :action StepOut<CR>
nnoremap <leader>sf :action ForceStepIn<CR>

""" version control
nnoremap <leader>va :action Git.Add<CR>

""" searching (prefix g = global)
nnoremap g/ :action FindInPath<CR>
nnoremap gr :action ReplaceInPath<CR>
